on:
  push:
    branches:
      - master
name: release
jobs:
  add-changelog:
    name: add-changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 10
          registry-url: "https://registry.npmjs.org"
      - name: Version check
        id: check
        uses: EndBug/version-check@v1.5.0
        with:
          diff-search: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Node.js dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: generate-changelog
        if: steps.check.outputs.changed == 'true'
        run: yarn changelog
      - name: generate-changelog-msg
        if: steps.check.outputs.changed == 'true'
        run: yarn run -s conventional-changelog > release-note
      - name: commit-changelog
        if: steps.check.outputs.changed == 'true'
        uses: EndBug/add-and-commit@v4
        with:
          add: "CHANGELOG.md"
          message: "Release ${{ steps.check.outputs.version }}"
          tag: "v${{ steps.check.outputs.version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: write-release-note
        if: steps.check.outputs.changed == 'true'
        uses: actions/github-script@v3
        env:
          version: ${{ steps.check.outputs.version }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const changelog = fs.readFileSync('release-note', 'utf-8');
            const packages = JSON.parse(fs.readFileSync('test-pkgs.json', 'utf-8'));
            const packageDescription = Object.keys(packages).map(name => `${name} = ${packages[name]}`).join('\n');

            await github.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${process.env.version}`,
              body: `${changelog}\n\n###Packages:\n${packageDescription}`
            });
